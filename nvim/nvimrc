" nvimrc

""""" Plugins
" ======================

call plug#begin()

Plug 'flazz/vim-colorschemes'
" Plug 'godlygeek/tabular'
Plug 'junegunn/vim-easy-align'
Plug 'plasticboy/vim-markdown'
Plug 'bling/vim-airline'
Plug 'xolox/vim-misc'
Plug 'xolox/vim-notes'
Plug 'rking/ag.vim'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

" try out
" tacahiroy/ctrlp-funky

call plug#end()


""""" Sensible defaults
" ======================
filetype on
filetype plugin indent on				" required
syntax on						" syntax highlighting
syntax enable


""""" The Looks
" ======================

colorscheme solarized
set background=light
set anti						" Antialias font
set guifont=Sauce\ Code\ Powerline:h13

set title						" show title in console title bar.
set cursorline						" highlights line
set cursorcolumn					" highlights column
set guitablabel=%t					" Tab headings
set guitabtooltip=%F					" Tab headings
set number relativenumber				" read "number_relativenumber" in help
set lsp=0						" space it out a little more (easier to read).
set cmdheight=1						" the command bar is 2 high.

set autoindent
set smartindent
set showmode						" show current-mode.
set showcmd						" show partially-typed commands.
set wildmenu						" visual autocomplete for command menu
set lazyredraw						" redraw only when we need to.
set showmatch						" show matching brackets

set sidescrolloff=2

set nofoldenable					" Folding disabled

highlight BoldGroup gui=bold
match BoldGroup /[\-\[\](){}.,;:=><_+*/]/

set backspace=indent,eol,start
set t_Co=256						" 256 colors

set listchars=tab:▸\ ,eol:¬,trail:•,extends:❯,precedes:❮	" Invisible characters (toggle with <,i>)
set nolist						" Invisible characters turned off by default
" Toggle invisible chars
nnoremap <leader>i :set list!<CR>


""""" Misc
" ======================

set viminfo+=!						" make sure it can save viminfo.
set history=50						" fifty lines of command line history.
set nobackup
set noswapfile
set visualbell t_vb=					" turn off error beep/flash
set mat=5						" how many tenths of a second to blink matching brackets for
set matchpairs+=<:>					" have % bounce between angled brackets, as well as t'other kinds.
set laststatus=2					" always show the status line
set mouse=a						" use mouse everywhere.

""""" Spaces and Tabs
" ======================

set tabstop=8 						" tab spacing (settings below are just to unify it)
set softtabstop=8 					" unify
set shiftwidth=4 					" unify
set expandtab
set nowrap 						" do not wrap lines
set smarttab 						" use tabs at the start of a line, spaces elsewhere
au FileType ruby,scala,haskell,eruby,javascript,html,css setl sw=2 sts=2 et



" Searching
" ============================

set hlsearch						" highlight searched for phrases
set incsearch 						" highlight as you type you search phrase
set ignorecase      					" ignore case when searching.
set smartcase						" make case sensitive when upper-case included.
set gdefault						" substitutions to replace all matches in a line.

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

""""" Mappings Shortcuts
" ============================

" escape and autosave
inoremap jk <Esc>:w<CR>

nnoremap <F2> :tabnew<CR>
nnoremap <F3> :tabp<CR>
nnoremap <F4> :tabn<CR>

inoremap uu _
inoremap hh =><Space>
"inoremap aa @
inoremap ii \|

""""" Movement
" ============================

" move vertically by visual line
nnoremap j gj
" move vertically by visual line
nnoremap k gk
nnoremap <space> <PageDown>
nnoremap <C-space> <PageUp>

""""" Window management
" ============================

" Jump to left window
nnoremap <C-h> <C-w>h
" Jump to right window
nnoremap <C-l> <C-w>l
" Jump to below window
"nnoremap <C-j> <C-w>j"<C-w>_
nnoremap <C-j> <C-w>j
" Jump to above window
"nnoremap <C-k> <C-w>k<C-w>_
nnoremap <C-k> <C-w>k

set equalalways						" Multiple windows, when created, are equal in size
set splitbelow splitright				" Windows on splitting would be below or to the right

""""" Leader shortcuts
" ============================

" open vimrc
nnoremap <leader>ev :tabnew $MYVIMRC <CR>
" source vimrc
nnoremap <leader>sv :source $MYVIMRC <CR>

" vertical split
nnoremap <leader>v :vsp^M^W^W<CR>
" horizontal split
nnoremap <leader>h :split^M^W^W<CR>

""""" vim-easy-align
" ============================

" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

""""" vim-notes
" ============================

let g:notes_directories = ['~/Dropbox/Notes']
let g:notes_suffix = '.md'
let g:notes_title_sync = 'rename_file'

""""" vim-airline
" ============================

let g:airline_powerline_fonts = 1

""""" ctrlp.vim
" ============================

nnoremap <C-b> :CtrlPBuffer<CR>
nnoremap <C-m> :CtrlPMRU<CR>

" NerdTree
nnoremap <leader>n :NERDTreeTabsToggle<CR>
let NERDTreeHijackNetrw=1                                       " User instead of Netrw when doing an edit /foobar
let NERDTreeMouseMode=1                                         " Single click for everything
let g:NERDTreeWinPos = "left"

