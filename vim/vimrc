" -----------------------------------------------------------------------------*
" | VIM Settings
" | <leader>n = toggle NERDTree off and on
" | jk = <esc> Very useful for keeping your hands on the home row
" | hh = inserts '=>'
" | aa = inserts '@'
" | uu = inserts '_'
" | ,h = new horizontal window
" | ,v = new vertical window
" | ,i = toggle invisibles
" -----------------------------------------------------------------------------

set hidden

""""" Vundle settings
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'Shougo/unite.vim'
Bundle 'Shougo/vimproc.vim'
Bundle 'flazz/vim-colorschemes'
Bundle "daylerees/colour-schemes", { "rtp": "vim-themes/" }
Bundle 'Lokaltog/vim-powerline'
Bundle 'derekwyatt/vim-scala'
Bundle 'tpope/vim-fugitive'
Bundle 'ervandew/supertab'
Bundle 'majutsushi/tagbar'
Bundle 'kien/rainbow_parentheses.vim'
Bundle 'eagletmt/ghcmod-vim'
Bundle 'dag/vim2hs'
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-surround'
Bundle 'tpope/timl'
Bundle 'sjl/tslime2.vim'
Bundle 'godlygeek/tabular'
Bundle 'xolox/vim-session'
Bundle 'xolox/vim-misc'
Bundle "mattn/emmet-vim"
Bundle "pangloss/vim-javascript"
Bundle 'Shougo/neomru.vim'
Bundle 'chriskempson/base16-vim'


""""" Mappings/Remappings/alternate-key-combinations
inoremap jk <Esc>:w<CR>					" escape and autosave
au FocusLost * :wa					" saves on focus lost

nnoremap <leader>ev :tabnew $MYVIMRC <CR>		" open vimrc
nnoremap <leader>sv :source $MYVIMRC <CR>		" source vimrc

nnoremap <space> <PageDown>
nnoremap <C-space> <PageUp>

nnoremap <C-h> <C-w>h					" Jump to left window
nnoremap <C-l> <C-w>l					" Jump to right window
nnoremap <C-j> <C-w>j<C-w>_				" Jump to below window
nnoremap <C-k> <C-w>k<C-w>_				" Jump to above window

noremap <leader>v :vsp^M^W^W<cr>			" vertical split
noremap <leader>h :split^M^W^W<cr>			" horizontal split

nnoremap <Silent> <leader>c :nohlsearch<CR>		" Turn off highlighted searches
nnoremap <leader>i :set list!<CR>			" Toggle invisible chars

nnoremap <F8> :TagbarToggle<CR>
nnoremap <F2> :tabnew<CR>
nnoremap <F3> :tabp<CR>
nnoremap <F4> :tabn<CR>

" special character(s)
inoremap uu _
inoremap hh =><Space>
inoremap aa @
autocmd FileType haskell	   :imap <buffer> >> -><Space>
autocmd FileType haskell,scala     :imap <buffer> << <-<Space>


""""" Appearance
set anti						" Antialias font
set guifont=Source\ Code\ Pro:h14
colorscheme base16-ocean
set background=dark

set sidescrolloff=2
set numberwidth=4
set equalalways						" Multiple windows, when created, are equal in size
set splitbelow splitright				" Windows on splitting would be below or to the right

set cursorline						" Cursor highlights
set cursorcolumn					" Cursor highlights

set backspace=indent,eol,start
syntax on						" syntax highlighting
syntax enable
set t_Co=256						" 256 colors

set listchars=tab:▸\ ,eol:¬,trail:•,extends:❯,precedes:❮	" Invisible characters (toggle with <,i>)
set nolist						" Invisible characters turned off by default

set viminfo+=!						" make sure it can save viminfo.
set title						" show title in console title bar.
set history=50						" fifty lines of command line history.
set showmode						" show current-mode.
set showcmd						" show partially-typed commands.

"set transparency=0
" Default size of window

set lines=70
set gtl=%t gtt=%F					" Tab headings
set ruler						" highlights the current line.
set nu rnu						" read "number_relativenumber" in help
set lsp=0						" space it out a little more (easier to read).
set cmdheight=1						" the command bar is 2 high.
" Text Formatting/Layout
set fo=tcrqn						" See Help (complex)
set ai 							" autoindent
set si 							" smartindent
" Tab settings
set tabstop=8 						" tab spacing (settings below are just to unify it)
set softtabstop=8 					" unify
set shiftwidth=4 					" unify
set noexpandtab 					" real tabs please!
set nowrap 						" do not wrap lines
set smarttab 						" use tabs at the start of a line, spaces elsewhere
au FileType ruby,scala,haskell,eruby,javascript,html,css setl sw=2 sts=2 et


""""" Bold special characters
highlight BoldGroup gui=bold
match BoldGroup /[\-\[\](){}.,;:=><_+*/]/


""""" Behaviour
filetype plugin indent on	" required!
set shell=/bin/bash
set nobackup
set noswapfile
set wildignore+=CMakeFiles
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize		" Sets what is saved when you save a session
set nocompatible						" incompatible with vi.
set visualbell t_vb=						" turn off error beep/flash
set showmatch							" show matching brackets
set mat=5							" how many tenths of a second to blink matching brackets for
set matchpairs+=<:>						" have % bounce between angled brackets, as well as t'other kinds.
set laststatus=2						" always show the status line
autocmd BufEnter * lcd %:p:h					" Sets path to directory buffer was loaded from
" Search and Replace
set hlsearch							" highlight searched for phrases
set incsearch 							" highlight as you type you search phrase
set ignorecase      						" ignore case when searching.
set smartcase							" make case sensitive when upper-case included.
set gdefault							" substitutions to replace all matches in a line.
set mouse=a							" use mouse everywhere.
autocmd BufWritePre * :%s/\s\+$//e				" remove trailing whitespace on save



""""" help feature-list for more options
""""" OS Specific
if has("gui_macvim")
elseif has("gui_gtk2")
elseif has("x11")
elseif has("gui_win32")
end



""""" Plugins configuration
""" NERDTree
let NERDTreeHijackNetrw=1	" User instead of Netrw when doing an edit /foobar
let NERDTreeMouseMode=1		" Single click for everything
map <leader>n <plug>NERDTreeTabsToggle<CR>

""" gist-vim
let g:gist_open_browser_after_post = 1

""" Unite
let g:unite_source_history_yank_enable = 1
call unite#custom#source('file,file/new,buffer,file_rec,file_rec/async', 'matchers', 'matcher_fuzzy')
call unite#custom#source('file,file/new,buffer,file_rec,file_rec/async', 'sorters', 'sorter_rank')

call unite#custom#source('file,file_rec,file_rec/async', 'ignore_pattern',
     \'tmp\|vendor\|\.bundle\|target\|\.git\|\.idea')

nnoremap <C-p> :Unite -no-split -buffer-name=files -start-insert file_rec/async:!<cr>

nnoremap <C-f> :Unite -no-split -buffer-name=files  -start-insert file<cr>
"nnoremap <C-h> :Unite -no-split -buffer-name=mru    -start-insert file_mru<cr>
nnoremap <C-o> :Unite -no-split -buffer-name=outline -start-insert outline<cr>
nnoremap <C-g> :Unite -no-split -buffer-name=files  -start-insert grep:.<cr>
nnoremap <C-y> :Unite -no-split -buffer-name=yank    history/yank<cr>
nnoremap <C-b> :Unite -no-split -buffer-name=buffer  buffer<cr>

nnoremap <C-s> :Unite -quick-match buffer<CR>
nnoremap <C-f> :Unite grep:.<CR>

" Drop cache for unite.vim
function! UniteClearCache()
  let result = vimproc#system_bg("rm ~/.cache/unite -rf")
endfunction
command UniteClearCache call UniteClearCache()





""""" Comments

" get rid of the default style of C comments, and define a style with two stars
" at the start of `middle' rows which (looks nicer and) avoids asterisks used
" for bullet lists being treated like C comments; then define a bullet list
" style for single stars (like already is for hyphens):
set comments-=s1:/*,mb:*,ex:*/
set comments+=s:/*,mb:**,ex:*/
set comments+=fb:*




""""" Folding : enable folding, but by default make it act like folding is off, because folding is annoying in anything but a few rare cases

set nofoldenable
"set foldenable 		" Turn on folding
"set foldmethod=indent		" Make folding indent sensitive
"set foldlevel=100 		" Don't autofold anything (but I can still fold manually)
"set foldopen-=search 		" don't open folds when you search into them
"set foldopen-=undo 		" don't open folds when you undo stuff




"""""" Rainbow Parenthsis
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces


