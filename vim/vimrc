" -----------------------------------------------------------------------------*
" | VIM Settings
" | \n = toggle NERDTree off and on
" | jk = <esc> Very useful for keeping your hands on the home row
" | hh = inserts '=>'
" | aa = inserts '@'
" | uu = inserts '_'
" | ,h = new horizontal window
" | ,v = new vertical window
" | ,i = toggle invisibles
" | F2 = opens $MYVIMRC
" -----------------------------------------------------------------------------

set hidden

""""" Vundle settings 
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'Shougo/unite.vim'
Bundle 'Shougo/vimproc.vim'
Bundle 'flazz/vim-colorschemes'
Bundle "daylerees/colour-schemes", { "rtp": "vim-themes/" }
Bundle 'Lokaltog/vim-powerline'
Bundle 'derekwyatt/vim-scala'
"Bundle 'vim-ruby/vim-ruby'
"Bundle 'L9'
"Bundle 'FuzzyFinder'
"Bundle 'LustyExplorer'
"Bundle 'mattn/webapi-vim'
"Bundle 'mattn/gist-vim'
"Bundle 'thoughtbot/vim-rspec'
"Bundle 'Shougo/neomru.vim'
"Bundle 'tpope/vim-rails'
"Bundle 'tpope/vim-surround'
"Bundle 'tpope/vim-rvm'
"Bundle 'tpope/vim-fugitive'
"Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
"Bundle 'YankRing.vim'
"Bundle 'vim-scripts/VimLite'
"Bundle 'Rainbow Parenthsis Bundle'
"Bundle 'rails.vim'



""""" Mappings/Remappings/alternate-key-combinations
noremap <Space> <PageDown>	" page-down with spacebar (default is like l).
noremap <BS> <PageUp>		" page-up with backspace (default is like h).
noremap <Ins> 25<C-Y>		" scroll-up using Insert 25 lines keeping cursor at its position.
noremap <Del> 25<C-E>		" scroll-down using Delete -ditto-
" [<Ins> by default is like i, and <Del> like x.]
" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j<C-w>_
map <C-k> <C-w>k<C-w>_
map <C-l> <C-w>l
" Vertical split then hop to new buffer
:noremap ,v :vsp^M^W^W<cr>
:noremap ,h :split^M^W^W<cr>
nmap <silent> ,/ :nohlsearch<CR>	" Turn off highlighted searches
:noremap ,i :set list!<CR>	" Toggle invisible chars
map T :TaskList<CR>		" Keymap for TaskList (use q to quit)
map Y :TlistToggle<CR>		" Keymap for TagList
imap jk <Esc>
imap uu _
imap hh =>
imap aa @
map <F2> :tabnew $MYVIMRC <CR>
" Inser New Line
" Ctrl-j/k deletes blank line below/above, and Alt-j/k inserts.
"nnoremap <silent><C-j> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
"nnoremap <silent><C-k> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><A-j> :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent><A-k> :set paste<CR>m`O<Esc>``:set nopaste<CR>




""""" Appearance
colorscheme solarized
set anti			" Antialias font
set guifont=Source\ Code\ Pro:h14 
set sidescrolloff=2
set numberwidth=4
set equalalways			" Multiple windows, when created, are equal in size
set splitbelow splitright
set cursorline			" Cursor highlights
set cursorcolumn		" Cursor highlights
" match LongLineWarning '\%120v.*' " Error format when a line is longer than 120
set backspace=indent,eol,start
syntax on			" syntax highlighting
set t_Co=256			" 256 colors
" Invisible characters (toggle with <,i>)
set listchars=tab:▸\ ,eol:¬,trail:•,extends:❯,precedes:❮
set list
"set nolist
set viminfo+=!			" make sure it can save viminfo.
set title			" show title in console title bar.
set history=50			" fifty lines of command line history.
set showmode			" show current-mode.
set showcmd			" show partially-typed commands.
"set transparency=0
" Default size of window
set columns=100
set lines=70
set gtl=%t gtt=%F		" Tab headings
set ruler			" highlights the current line.
set rnu				" displays line numbers.
set nu
set lsp=0			" space it out a little more (easier to read).
set cmdheight=1			" the command bar is 2 high.
" Text Formatting/Layout
set fo=tcrqn			" See Help (complex)
set ai 				" autoindent
set si 				" smartindent 
" Tab settings 
set tabstop=8 			" tab spacing (settings below are just to unify it)
set softtabstop=8 		" unify
set shiftwidth=4 		" unify 
set noexpandtab 		" real tabs please!
set nowrap 			" do not wrap lines  
set smarttab 			" use tabs at the start of a line, spaces elsewhere






""""" Behaviour
filetype plugin indent on	" required! 
set shell=/usr/local/bin/fish
set nobackup
set noswapfile
set wildignore+=CMakeFiles
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize		" Sets what is saved when you save a session
set nocompatible		" incompatible with vi.
set visualbell t_vb=		" turn off error beep/flash
set showmatch			" show matching brackets
set mat=5			" how many tenths of a second to blink matching brackets for
set matchpairs+=<:>		" have % bounce between angled brackets, as well as t'other kinds.
set laststatus=2		" always show the status line
autocmd BufEnter * lcd %:p:h	" Sets path to directory buffer was loaded from
" Search and Replace
set hlsearch			" highlight searched for phrases
set incsearch 			" highlight as you type you search phrase
set ignorecase      		" ignore case when searching. 
set smartcase			" make case sensitive when upper-case included.
set gdefault			" substitutions to replace all matches in a line.
set mouse=a			" use mouse everywhere.





""""" OS Specific
if has("gui_macvim")
  set fuoptions=maxvert,maxhorz " fullscreen options (MacVim only), resized window when changed to fullscreen
  set guioptions-=T		" remove toolbar
  set stal=2			" turn on tabs by default
elseif has("gui_gtk2")
elseif has("x11")
elseif has("gui_win32")
end





""""" Plugins configuration
""" NERDTree
let NERDTreeHijackNetrw=1	" User instead of Netrw when doing an edit /foobar
let NERDTreeMouseMode=1		" Single click for everything
map <Leader>n <plug>NERDTreeTabsToggle<CR>
 
""" gist-vim
let g:gist_open_browser_after_post = 1
 
""" Unite
let g:unite_source_history_yank_enable = 1
call unite#custom#source('file,file/new,buffer,file_rec,file_rec/async', 'matchers', 'matcher_fuzzy')
call unite#custom#source('file,file/new,buffer,file_rec,file_rec/async', 'sorters', 'sorter_rank')

call unite#custom#source('file,file_rec,file_rec/async', 'ignore_pattern',
      \'tmp\|vendor\|\.bundle\|target\|\.git')

nnoremap <C-p> :Unite -no-split -buffer-name=files -start-insert file_rec/async:!<cr>

nnoremap <space>f :Unite -no-split -buffer-name=files  -start-insert file<cr>
nnoremap <space>h :Unite -no-split -buffer-name=mru    -start-insert file_mru<cr>
nnoremap <space>o :Unite -no-split -buffer-name=outline -start-insert outline<cr>
nnoremap <space>/ :Unite -no-split -buffer-name=files  -start-insert grep:.<cr>
nnoremap <space>y :Unite -no-split -buffer-name=yank    history/yank<cr>
nnoremap <space>b :Unite -no-split -buffer-name=buffer  buffer<cr>




""""" Scala
au FileType scala setl sw=2 sts=2 et

 
 
 
""""" Comments

" get rid of the default style of C comments, and define a style with two stars
" at the start of `middle' rows which (looks nicer and) avoids asterisks used
" for bullet lists being treated like C comments; then define a bullet list
" style for single stars (like already is for hyphens):
set comments-=s1:/*,mb:*,ex:*/
set comments+=s:/*,mb:**,ex:*/
set comments+=fb:*




""""" Folding : enable folding, but by default make it act like folding is off, because folding is annoying in anything but a few rare cases

"set foldenable 		" Turn on folding
"set foldmethod=indent		" Make folding indent sensitive
"set foldlevel=100 		" Don't autofold anything (but I can still fold manually)
"set foldopen-=search 		" don't open folds when you search into them
"set foldopen-=undo 		" don't open folds when you undo stuff

