# Bash
alias sb='. ~/bin/dotfiles/bashrc' # source bashrc
if command -v gvim; then
    alias ea='gvim ~/bin/dotfiles/bash/aliases &'
else 
    alias ea='vim ~/bin/dotfiles/bash/aliases &'
fi

# Package managers
alias apti='sudo apt-get install'
alias aptu='sudo apt-get update'
alias apts='apt-cache search'

# Pretty print path
function path(){
    old=$IFS
    IFS=:
    printf "%s\n" $PATH
    IFS=$old
}

# Git
alias g='git'

# Hadoop

alias hhls='hadoop dfs -ls'
alias hhlsr='hadoop dfs -lsr'
alias hhdu='hadoop dfs -du'
alias hhdus='hadoop dfs -dus'
alias hhcount='hadoop dfs -count'
alias hhmv='hadoop dfs -mv'
alias hhcp='hadoop dfs -cp'
alias hhrm='hadoop dfs -rm'
alias hhrmr='hadoop dfs -rmr'
alias hhexpunge='hadoop dfs -expunge'
alias hhput='hadoop dfs -put'
alias hhcopyFromLocal='hadoop dfs -copyFromLocal'
alias hhmoveFromLocal='hadoop dfs -moveFromLocal'
alias hhget='hadoop dfs -get'
alias hhgetmerge='hadoop dfs -getmerge'
alias hhcat='hadoop dfs -cat'
alias hhtext='hadoop dfs -text'
alias hhcopyToLocal='hadoop dfs -copyToLocal'
alias hhmoveToLocal='hadoop dfs -moveToLocal'
alias hhmkdir='hadoop dfs -mkdir'
alias hhsetrep='hadoop dfs -setrep'
alias hhtouchz='hadoop dfs -touchz'
alias hhtest='hadoop dfs -test'
alias hhstat='hadoop dfs -stat'
alias hhtail='hadoop dfs -tail'
alias hhchmod='hadoop dfs -chmod'
alias hhchown='hadoop dfs -chown'
alias hhchgrp='hadoop dfs -chgrp'
alias hhhelp='hadoop dfs -help'

# Maven
alias mi='mvn install'
alias mc='mvn clean'
alias mci='mvn clean install'
alias me='mvn eclipse:eclipse'
alias mif='mi -f'
alias mcf='mc -f'
alias mcif='mvn clean install -f'
alias mef='me -f'
alias mit='mvn install -DskipTests=false'
alias mcr='rm -r ~/.m2/repository/com/ilodge; cd third-party; ant install; ..'

# Directories
alias ..='cd ..'
alias cdd='cd -'
alias cddot='cd ~/bin/dotfiles'
alias cdblog='cd ~/codes/sinatra/aerohitblog'

# Applications
alias gsm='gnome-system-monitor'
alias pgtick='padsp gtick'
# Misc
#alias eclipse='~/Downloads/eclipse/eclipse'
#make && notify-send "Successfully compiled the kernel" || notify-send "Error while compiling the kernel"

# External monitors
alias extmon='xrandr --output VGA1 --primary; xrandr --output LVDS1 --off'
alias lapmon='xrandr --output LVDS1 --primary; xrandr --output VGA1 --off'

# Text editors / IDEs
alias sublime='~/Downloads/Sublime\ Text\ 2/sublime_text &'

# Compilers
alias sg++='g++ -g -Wall -Wextra -Winit-self -Wold-style-cast -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Winit-self -ansi -pedantic'

# Grid5K
# Have to figure out a more elegant way for each of the functions
function wjobids {
    oargridstat | grep Reservation | cut -d' ' -f 3 | cut -d':' -f 1
}

function wlistnodes {
    for jobid in $(wjobids); do 
	echo "Job: $jobid"
	oargridstat -w -l $jobid | sort | uniq | grep -v '^$'
    done
}

function wdeljob {
    echo "Not implemented"
}

function wcheckservices {
    taktuk -f $1 broadcast exec [ 'ps aux | grep blobseer | grep -v grep' ]
}

# Copying to servers
function copytorennes {
    scp -r $1 rennes.g5k:~
}

#alias gnuplot=/Applications/Gnuplot.app/Contents/Resources/bin/gnuplot
alias gnuplot=/usr/local/Cellar/gnuplot/4.6.3/bin/gnuplot

function mygrep {
    grep --exclude-dir=".svn" -I -r $* *;
}

function analyze_log {
    cat $1 | grep FINISH | sed -e 's/^.*elapsed:\(.*\) us.*/\1/' -e 's/00:00://' | awk 'NR == 1 { max=$1; min=$1; sum=0 }  { if ($1>max) max=$1; if ($1<min) min=$1; sum+=$1;} END {printf "Case %d Min: %f\tMax: %f\tAverage: %f\n", NR, min, max, sum/NR}'
}

function syncdeploy {
    for var in "$@"; do
	echo "$var"
	rsync --delete -aP ~/deploy $var:~;
    done
}
